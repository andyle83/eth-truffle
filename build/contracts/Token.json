{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_f",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_f\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Token.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Faucet.sol\":{\"keccak256\":\"0x936a32fd5f2b4aef724df778f8ed87e88232a99d0a14327d1aefa0834516ec2f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b941f4df4d9d42e057d654009ef86bd4c3c4211e5465940455905c2a8c2c4024\",\"dweb:/ipfs/Qmb4vUxAuMytPG6MQkd5k6CuLQrAKbmTtb74q9tmeKQJzd\"]},\"project:/contracts/Token.sol\":{\"keccak256\":\"0xa98e5c70abde7591570d1020b6692a56e3a320a3a12f2064aabcaeb661ba7618\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4dc886e2985fe48c26c60914906149d242e81762688a91bf528e47c3c75e19ec\",\"dweb:/ipfs/QmU9mZu3sy5mnt9j9jCMDhxLtW6eHu1yrTVGGqeaxbrGsp\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610351380380610351833981810160405281019061003291906101b1565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d67016345785d8a00006040518263ffffffff1660e01b8152600401610116919061022d565b600060405180830381600087803b15801561013057600080fd5b505af1158015610144573d6000803e3d6000fd5b5050505050610248565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061017e82610153565b9050919050565b61018e81610173565b811461019957600080fd5b50565b6000815190506101ab81610185565b92915050565b6000602082840312156101c7576101c661014e565b5b60006101d58482850161019c565b91505092915050565b6000819050919050565b6000819050919050565b6000819050919050565b600061021761021261020d846101de565b6101f2565b6101e8565b9050919050565b610227816101fc565b82525050565b6000602082019050610242600083018461021e565b92915050565b60fb806102566000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806383197ef014602d575b600080fd5b60336035565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614608c57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16fffea2646970667358221220ec9a9fee76d6d74cdae50d5715aba3c5b0b0d3667c934df972320e1f3d01c39964736f6c634300080d0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c806383197ef014602d575b600080fd5b60336035565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614608c57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16fffea2646970667358221220ec9a9fee76d6d74cdae50d5715aba3c5b0b0d3667c934df972320e1f3d01c39964736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2175:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:2",
                "type": ""
              }
            ],
            "src": "7:75:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:2"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:2"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:2",
                "type": ""
              }
            ],
            "src": "334:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "519:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "529:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "558:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "540:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "540:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "529:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "501:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "511:7:2",
                "type": ""
              }
            ],
            "src": "466:104:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "627:87:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "692:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "701:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "704:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "694:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "694:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "694:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "650:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "683:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "657:25:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "657:32:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "647:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "647:43:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "640:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "640:51:2"
                  },
                  "nodeType": "YulIf",
                  "src": "637:71:2"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "620:5:2",
                "type": ""
              }
            ],
            "src": "576:138:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "791:88:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "801:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "816:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "810:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "810:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "801:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "867:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "832:34:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:41:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "832:41:2"
                }
              ]
            },
            "name": "abi_decode_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "769:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "777:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "785:5:2",
                "type": ""
              }
            ],
            "src": "720:159:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "970:282:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1016:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1018:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1018:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1018:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "991:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1000:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "987:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1012:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "983:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "983:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "980:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1109:136:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1124:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1138:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1128:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1153:82:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1207:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1218:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1203:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1203:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1227:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1163:39:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1163:72:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1153:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "940:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "951:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "963:6:2",
                "type": ""
              }
            ],
            "src": "885:367:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1328:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1338:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1349:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1338:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_100000000000000000_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1310:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1320:7:2",
                "type": ""
              }
            ],
            "src": "1258:102:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1411:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1421:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1432:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1421:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1393:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1403:7:2",
                "type": ""
              }
            ],
            "src": "1366:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:28:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1491:12:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1498:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1491:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1467:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1477:3:2",
                "type": ""
              }
            ],
            "src": "1449:60:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1600:107:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1610:91:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1693:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_100000000000000000_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "1650:42:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1650:49:2"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1641:8:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1641:59:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1623:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1623:78:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1610:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_100000000000000000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1580:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1590:9:2",
                "type": ""
              }
            ],
            "src": "1515:192:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1803:91:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1820:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1881:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_100000000000000000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1825:55:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1825:62:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1813:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1813:75:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1813:75:2"
                }
              ]
            },
            "name": "abi_encode_t_rational_100000000000000000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1791:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1798:3:2",
                "type": ""
              }
            ],
            "src": "1713:181:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2023:149:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2033:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2045:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2056:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2041:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2041:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2033:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2138:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2151:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2162:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2147:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2147:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_100000000000000000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2069:68:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2069:96:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2069:96:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_100000000000000000_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1995:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2007:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2018:4:2",
                "type": ""
              }
            ],
            "src": "1900:272:2"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_100000000000000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_100000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_100000000000000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_100000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_100000000000000000_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_100000000000000000_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [],
  "sourceMap": "85:213:1:-:0;;;137:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;189:10:0;173:5;;:27;;;;;;;;;;;;;;;;;;248:2:1;231:7;;:20;;;;;;;;;;;;;;;;;;261:7;;;;;;;;;;;:16;;;278:10;261:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;137:159;85:213;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:367::-;963:6;1012:2;1000:9;991:7;987:23;983:32;980:119;;;1018:79;;:::i;:::-;980:119;1138:1;1163:72;1227:7;1218:6;1207:9;1203:22;1163:72;:::i;:::-;1153:82;;1109:136;885:367;;;;:::o;1258:102::-;1320:7;1349:5;1338:16;;1258:102;;;:::o;1366:77::-;1403:7;1432:5;1421:16;;1366:77;;;:::o;1449:60::-;1477:3;1498:5;1491:12;;1449:60;;;:::o;1515:192::-;1590:9;1623:78;1641:59;1650:49;1693:5;1650:49;:::i;:::-;1641:59;:::i;:::-;1623:78;:::i;:::-;1610:91;;1515:192;;;:::o;1713:181::-;1825:62;1881:5;1825:62;:::i;:::-;1820:3;1813:75;1713:181;;:::o;1900:272::-;2018:4;2056:2;2045:9;2041:18;2033:26;;2069:96;2162:1;2151:9;2147:17;2138:6;2069:96;:::i;:::-;1900:272;;;;:::o;85:213:1:-;;;;;;;",
  "deployedSourceMap": "85:213:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;385:72:0;;;:::i;:::-;;;299:5;;;;;;;;;;285:19;;:10;:19;;;276:29;;;;;;444:5:::1;::::0;::::1;;;;;;;;431:19;;",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"./Faucet.sol\";\n\ncontract Token is mortal {\n    Faucet _faucet;\n\n    constructor(address payable _f) {\n        // create another contract and send a value\n        _faucet = Faucet(_f);\n        _faucet.withdraw(0.1  ether);\n    }\n}",
  "sourcePath": "/Users/Anh.Le/Workspace/GitHub/eth-truffle/contracts/Token.sol",
  "ast": {
    "absolutePath": "project:/contracts/Token.sol",
    "exportedSymbols": {
      "Faucet": [
        104
      ],
      "Token": [
        131
      ],
      "mortal": [
        40
      ],
      "owner": [
        27
      ]
    },
    "id": 132,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 106,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:1"
      },
      {
        "absolutePath": "project:/contracts/Faucet.sol",
        "file": "./Faucet.sol",
        "id": 107,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 105,
        "src": "61:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 108,
              "name": "mortal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40,
              "src": "103:6:1"
            },
            "id": 109,
            "nodeType": "InheritanceSpecifier",
            "src": "103:6:1"
          }
        ],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 131,
        "linearizedBaseContracts": [
          131,
          40,
          27
        ],
        "name": "Token",
        "nameLocation": "94:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 112,
            "mutability": "mutable",
            "name": "_faucet",
            "nameLocation": "123:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "116:14:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Faucet_$104",
              "typeString": "contract Faucet"
            },
            "typeName": {
              "id": 111,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110,
                "name": "Faucet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 104,
                "src": "116:6:1"
              },
              "referencedDeclaration": 104,
              "src": "116:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Faucet_$104",
                "typeString": "contract Faucet"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "169:127:1",
              "statements": [
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "_faucet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "231:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Faucet_$104",
                        "typeString": "contract Faucet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 119,
                          "name": "_f",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "248:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 118,
                        "name": "Faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "241:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Faucet_$104_$",
                          "typeString": "type(contract Faucet)"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "241:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Faucet_$104",
                        "typeString": "contract Faucet"
                      }
                    },
                    "src": "231:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Faucet_$104",
                      "typeString": "contract Faucet"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "231:20:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "278:10:1",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 123,
                        "name": "_faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "261:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$104",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92,
                      "src": "261:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "261:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "261:28:1"
                }
              ]
            },
            "id": 130,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_f",
                  "nameLocation": "165:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "149:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "149:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "148:20:1"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "169:0:1"
            },
            "scope": 131,
            "src": "137:159:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 132,
        "src": "85:213:1",
        "usedErrors": []
      }
    ],
    "src": "36:262:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Token.sol",
    "exportedSymbols": {
      "Faucet": [
        104
      ],
      "Token": [
        131
      ],
      "mortal": [
        40
      ],
      "owner": [
        27
      ]
    },
    "id": 132,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 106,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:1"
      },
      {
        "absolutePath": "project:/contracts/Faucet.sol",
        "file": "./Faucet.sol",
        "id": 107,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 132,
        "sourceUnit": 105,
        "src": "61:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 108,
              "name": "mortal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40,
              "src": "103:6:1"
            },
            "id": 109,
            "nodeType": "InheritanceSpecifier",
            "src": "103:6:1"
          }
        ],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 131,
        "linearizedBaseContracts": [
          131,
          40,
          27
        ],
        "name": "Token",
        "nameLocation": "94:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 112,
            "mutability": "mutable",
            "name": "_faucet",
            "nameLocation": "123:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 131,
            "src": "116:14:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Faucet_$104",
              "typeString": "contract Faucet"
            },
            "typeName": {
              "id": 111,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110,
                "name": "Faucet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 104,
                "src": "116:6:1"
              },
              "referencedDeclaration": 104,
              "src": "116:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Faucet_$104",
                "typeString": "contract Faucet"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "169:127:1",
              "statements": [
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "_faucet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "231:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Faucet_$104",
                        "typeString": "contract Faucet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 119,
                          "name": "_f",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "248:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 118,
                        "name": "Faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "241:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Faucet_$104_$",
                          "typeString": "type(contract Faucet)"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "241:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Faucet_$104",
                        "typeString": "contract Faucet"
                      }
                    },
                    "src": "231:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Faucet_$104",
                      "typeString": "contract Faucet"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "231:20:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "278:10:1",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 123,
                        "name": "_faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "261:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$104",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92,
                      "src": "261:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "261:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "261:28:1"
                }
              ]
            },
            "id": 130,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_f",
                  "nameLocation": "165:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "149:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "149:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "148:20:1"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "169:0:1"
            },
            "scope": 131,
            "src": "137:159:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 132,
        "src": "85:213:1",
        "usedErrors": []
      }
    ],
    "src": "36:262:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-02T22:46:16.964Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}